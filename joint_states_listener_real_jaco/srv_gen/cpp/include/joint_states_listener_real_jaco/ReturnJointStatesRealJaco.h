/* Auto-generated by genmsg_cpp for file /home/phil/catkin_ws/src/scripts/joint_states_listener_real_jaco/srv/ReturnJointStatesRealJaco.srv */
#ifndef JOINT_STATES_LISTENER_REAL_JACO_SERVICE_RETURNJOINTSTATESREALJACO_H
#define JOINT_STATES_LISTENER_REAL_JACO_SERVICE_RETURNJOINTSTATESREALJACO_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace joint_states_listener_real_jaco
{
template <class ContainerAllocator>
struct ReturnJointStatesRealJacoRequest_ {
  typedef ReturnJointStatesRealJacoRequest_<ContainerAllocator> Type;

  ReturnJointStatesRealJacoRequest_()
  : joint1(0.0)
  , joint2(0.0)
  , joint3(0.0)
  , joint4(0.0)
  , joint5(0.0)
  , joint6(0.0)
  , joint7(0.0)
  {
  }

  ReturnJointStatesRealJacoRequest_(const ContainerAllocator& _alloc)
  : joint1(0.0)
  , joint2(0.0)
  , joint3(0.0)
  , joint4(0.0)
  , joint5(0.0)
  , joint6(0.0)
  , joint7(0.0)
  {
  }

  typedef float _joint1_type;
  float joint1;

  typedef float _joint2_type;
  float joint2;

  typedef float _joint3_type;
  float joint3;

  typedef float _joint4_type;
  float joint4;

  typedef float _joint5_type;
  float joint5;

  typedef float _joint6_type;
  float joint6;

  typedef float _joint7_type;
  float joint7;


  typedef boost::shared_ptr< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct ReturnJointStatesRealJacoRequest
typedef  ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<std::allocator<void> > ReturnJointStatesRealJacoRequest;

typedef boost::shared_ptr< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest> ReturnJointStatesRealJacoRequestPtr;
typedef boost::shared_ptr< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest const> ReturnJointStatesRealJacoRequestConstPtr;



template <class ContainerAllocator>
struct ReturnJointStatesRealJacoResponse_ {
  typedef ReturnJointStatesRealJacoResponse_<ContainerAllocator> Type;

  ReturnJointStatesRealJacoResponse_()
  {
  }

  ReturnJointStatesRealJacoResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct ReturnJointStatesRealJacoResponse
typedef  ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<std::allocator<void> > ReturnJointStatesRealJacoResponse;

typedef boost::shared_ptr< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse> ReturnJointStatesRealJacoResponsePtr;
typedef boost::shared_ptr< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse const> ReturnJointStatesRealJacoResponseConstPtr;


struct ReturnJointStatesRealJaco
{

typedef ReturnJointStatesRealJacoRequest Request;
typedef ReturnJointStatesRealJacoResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct ReturnJointStatesRealJaco
} // namespace joint_states_listener_real_jaco

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bf16c4e5154848a0767d1aaab0a4796b";
  }

  static const char* value(const  ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xbf16c4e5154848a0ULL;
  static const uint64_t static_value2 = 0x767d1aaab0a4796bULL;
};

template<class ContainerAllocator>
struct DataType< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "joint_states_listener_real_jaco/ReturnJointStatesRealJacoRequest";
  }

  static const char* value(const  ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 joint1\n\
float32 joint2\n\
float32 joint3\n\
float32 joint4\n\
float32 joint5\n\
float32 joint6\n\
float32 joint7\n\
\n\
";
  }

  static const char* value(const  ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "joint_states_listener_real_jaco/ReturnJointStatesRealJacoResponse";
  }

  static const char* value(const  ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.joint1);
    stream.next(m.joint2);
    stream.next(m.joint3);
    stream.next(m.joint4);
    stream.next(m.joint5);
    stream.next(m.joint6);
    stream.next(m.joint7);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct ReturnJointStatesRealJacoRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER
}; // struct ReturnJointStatesRealJacoResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<joint_states_listener_real_jaco::ReturnJointStatesRealJaco> {
  static const char* value() 
  {
    return "bf16c4e5154848a0767d1aaab0a4796b";
  }

  static const char* value(const joint_states_listener_real_jaco::ReturnJointStatesRealJaco&) { return value(); } 
};

template<>
struct DataType<joint_states_listener_real_jaco::ReturnJointStatesRealJaco> {
  static const char* value() 
  {
    return "joint_states_listener_real_jaco/ReturnJointStatesRealJaco";
  }

  static const char* value(const joint_states_listener_real_jaco::ReturnJointStatesRealJaco&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bf16c4e5154848a0767d1aaab0a4796b";
  }

  static const char* value(const joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "joint_states_listener_real_jaco/ReturnJointStatesRealJaco";
  }

  static const char* value(const joint_states_listener_real_jaco::ReturnJointStatesRealJacoRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bf16c4e5154848a0767d1aaab0a4796b";
  }

  static const char* value(const joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "joint_states_listener_real_jaco/ReturnJointStatesRealJaco";
  }

  static const char* value(const joint_states_listener_real_jaco::ReturnJointStatesRealJacoResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // JOINT_STATES_LISTENER_REAL_JACO_SERVICE_RETURNJOINTSTATESREALJACO_H

